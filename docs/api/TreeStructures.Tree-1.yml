### YamlMime:ManagedReference
items:
- uid: TreeStructures.Tree`1
  commentId: T:TreeStructures.Tree`1
  id: Tree`1
  parent: TreeStructures
  children:
  - TreeStructures.Tree`1.#ctor(`0)
  - TreeStructures.Tree`1.Find(`0)
  - TreeStructures.Tree`1.PrintTree
  - TreeStructures.Tree`1.Root
  langs:
  - csharp
  - vb
  name: Tree<T>
  nameWithType: Tree<T>
  fullName: TreeStructures.Tree<T>
  type: Class
  source:
    remote:
      path: src/TreeStructures/Tree.cs
      branch: main
      repo: git@github.com:Bercek71/tree-compression.git
    id: Tree
    path: ../src/TreeStructures/Tree.cs
    startLine: 2
  assemblies:
  - TreeStructures
  namespace: TreeStructures
  syntax:
    content: public class Tree<T>
    typeParameters:
    - id: T
    content.vb: Public Class Tree(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Tree(Of T)
  fullName.vb: TreeStructures.Tree(Of T)
  name.vb: Tree(Of T)
- uid: TreeStructures.Tree`1.#ctor(`0)
  commentId: M:TreeStructures.Tree`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: TreeStructures.Tree`1
  langs:
  - csharp
  - vb
  name: Tree(T)
  nameWithType: Tree<T>.Tree(T)
  fullName: TreeStructures.Tree<T>.Tree(T)
  type: Constructor
  source:
    remote:
      path: src/TreeStructures/Tree.cs
      branch: main
      repo: git@github.com:Bercek71/tree-compression.git
    id: .ctor
    path: ../src/TreeStructures/Tree.cs
    startLine: 2
  assemblies:
  - TreeStructures
  namespace: TreeStructures
  syntax:
    content: public Tree(T rootValue)
    parameters:
    - id: rootValue
      type: '{T}'
    content.vb: Public Sub New(rootValue As T)
  overload: TreeStructures.Tree`1.#ctor*
  nameWithType.vb: Tree(Of T).New(T)
  fullName.vb: TreeStructures.Tree(Of T).New(T)
  name.vb: New(T)
- uid: TreeStructures.Tree`1.Root
  commentId: P:TreeStructures.Tree`1.Root
  id: Root
  parent: TreeStructures.Tree`1
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: Tree<T>.Root
  fullName: TreeStructures.Tree<T>.Root
  type: Property
  source:
    remote:
      path: src/TreeStructures/Tree.cs
      branch: main
      repo: git@github.com:Bercek71/tree-compression.git
    id: Root
    path: ../src/TreeStructures/Tree.cs
    startLine: 4
  assemblies:
  - TreeStructures
  namespace: TreeStructures
  syntax:
    content: public TreeNode<T> Root { get; set; }
    parameters: []
    return:
      type: TreeStructures.TreeNode{{T}}
    content.vb: Public Property Root As TreeNode(Of T)
  overload: TreeStructures.Tree`1.Root*
  nameWithType.vb: Tree(Of T).Root
  fullName.vb: TreeStructures.Tree(Of T).Root
- uid: TreeStructures.Tree`1.Find(`0)
  commentId: M:TreeStructures.Tree`1.Find(`0)
  id: Find(`0)
  parent: TreeStructures.Tree`1
  langs:
  - csharp
  - vb
  name: Find(T)
  nameWithType: Tree<T>.Find(T)
  fullName: TreeStructures.Tree<T>.Find(T)
  type: Method
  source:
    remote:
      path: src/TreeStructures/Tree.cs
      branch: main
      repo: git@github.com:Bercek71/tree-compression.git
    id: Find
    path: ../src/TreeStructures/Tree.cs
    startLine: 7
  assemblies:
  - TreeStructures
  namespace: TreeStructures
  syntax:
    content: public TreeNode<T>? Find(T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: TreeStructures.TreeNode{{T}}
    content.vb: Public Function Find(value As T) As TreeNode(Of T)
  overload: TreeStructures.Tree`1.Find*
  nameWithType.vb: Tree(Of T).Find(T)
  fullName.vb: TreeStructures.Tree(Of T).Find(T)
- uid: TreeStructures.Tree`1.PrintTree
  commentId: M:TreeStructures.Tree`1.PrintTree
  id: PrintTree
  parent: TreeStructures.Tree`1
  langs:
  - csharp
  - vb
  name: PrintTree()
  nameWithType: Tree<T>.PrintTree()
  fullName: TreeStructures.Tree<T>.PrintTree()
  type: Method
  source:
    remote:
      path: src/TreeStructures/Tree.cs
      branch: main
      repo: git@github.com:Bercek71/tree-compression.git
    id: PrintTree
    path: ../src/TreeStructures/Tree.cs
    startLine: 45
  assemblies:
  - TreeStructures
  namespace: TreeStructures
  syntax:
    content: public void PrintTree()
    content.vb: Public Sub PrintTree()
  overload: TreeStructures.Tree`1.PrintTree*
  nameWithType.vb: Tree(Of T).PrintTree()
  fullName.vb: TreeStructures.Tree(Of T).PrintTree()
references:
- uid: TreeStructures
  commentId: N:TreeStructures
  href: TreeStructures.html
  name: TreeStructures
  nameWithType: TreeStructures
  fullName: TreeStructures
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TreeStructures.Tree`1.#ctor*
  commentId: Overload:TreeStructures.Tree`1.#ctor
  href: TreeStructures.Tree-1.html#TreeStructures_Tree_1__ctor__0_
  name: Tree
  nameWithType: Tree<T>.Tree
  fullName: TreeStructures.Tree<T>.Tree
  nameWithType.vb: Tree(Of T).New
  fullName.vb: TreeStructures.Tree(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TreeStructures.Tree`1.Root*
  commentId: Overload:TreeStructures.Tree`1.Root
  href: TreeStructures.Tree-1.html#TreeStructures_Tree_1_Root
  name: Root
  nameWithType: Tree<T>.Root
  fullName: TreeStructures.Tree<T>.Root
  nameWithType.vb: Tree(Of T).Root
  fullName.vb: TreeStructures.Tree(Of T).Root
- uid: TreeStructures.TreeNode{{T}}
  commentId: T:TreeStructures.TreeNode{`0}
  parent: TreeStructures
  definition: TreeStructures.TreeNode`1
  href: TreeStructures.TreeNode-1.html
  name: TreeNode<T>
  nameWithType: TreeNode<T>
  fullName: TreeStructures.TreeNode<T>
  nameWithType.vb: TreeNode(Of T)
  fullName.vb: TreeStructures.TreeNode(Of T)
  name.vb: TreeNode(Of T)
  spec.csharp:
  - uid: TreeStructures.TreeNode`1
    name: TreeNode
    href: TreeStructures.TreeNode-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TreeStructures.TreeNode`1
    name: TreeNode
    href: TreeStructures.TreeNode-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TreeStructures.TreeNode`1
  commentId: T:TreeStructures.TreeNode`1
  parent: TreeStructures
  href: TreeStructures.TreeNode-1.html
  name: TreeNode<T>
  nameWithType: TreeNode<T>
  fullName: TreeStructures.TreeNode<T>
  nameWithType.vb: TreeNode(Of T)
  fullName.vb: TreeStructures.TreeNode(Of T)
  name.vb: TreeNode(Of T)
  spec.csharp:
  - uid: TreeStructures.TreeNode`1
    name: TreeNode
    href: TreeStructures.TreeNode-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TreeStructures.TreeNode`1
    name: TreeNode
    href: TreeStructures.TreeNode-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TreeStructures.Tree`1.Find*
  commentId: Overload:TreeStructures.Tree`1.Find
  href: TreeStructures.Tree-1.html#TreeStructures_Tree_1_Find__0_
  name: Find
  nameWithType: Tree<T>.Find
  fullName: TreeStructures.Tree<T>.Find
  nameWithType.vb: Tree(Of T).Find
  fullName.vb: TreeStructures.Tree(Of T).Find
- uid: TreeStructures.Tree`1.PrintTree*
  commentId: Overload:TreeStructures.Tree`1.PrintTree
  href: TreeStructures.Tree-1.html#TreeStructures_Tree_1_PrintTree
  name: PrintTree
  nameWithType: Tree<T>.PrintTree
  fullName: TreeStructures.Tree<T>.PrintTree
  nameWithType.vb: Tree(Of T).PrintTree
  fullName.vb: TreeStructures.Tree(Of T).PrintTree
